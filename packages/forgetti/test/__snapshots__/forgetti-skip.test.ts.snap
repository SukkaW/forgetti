// Vitest Snapshot v1

exports[`forgetti skip > should optimize non-skipped function declaration 1`] = `
"import { useMemo as _useMemo } from \\"react\\";
import { $$cache as _$$cache } from \\"forgetti/runtime\\";
import { memo as _memo } from \\"react\\";
import { $$memo as _$$memo } from \\"forgetti/runtime\\";
import { $$equals as _$$equals } from \\"forgetti/runtime\\";
const _Memo = _$$memo(_memo);
function Example(props) {
  let _c = _$$cache(_useMemo, 6),
    _eq = _$$equals(_c, 0, props),
    _v = _eq ? _c[0] : _c[0] = props,
    _v2 = _eq ? _c[1] : _c[1] = _v.className,
    _eq2 = _$$equals(_c, 2, _v2),
    _v3 = _eq2 ? _c[2] : _c[2] = _v2,
    _v4 = _eq ? _c[3] : _c[3] = _v.children,
    _eq3 = _$$equals(_c, 4, _v4),
    _v5 = _eq3 ? _c[4] : _c[4] = _v4;
  return _eq2 && _eq3 ? _c[5] : _c[5] = <_Memo value={<h1 className={_v3}>{_v5}</h1>} />;
}"
`;

exports[`forgetti skip > should optimize non-skipped function expression 1`] = `
"import { useMemo as _useMemo } from \\"react\\";
import { $$cache as _$$cache } from \\"forgetti/runtime\\";
import { memo as _memo } from \\"react\\";
import { $$memo as _$$memo } from \\"forgetti/runtime\\";
import { $$equals as _$$equals } from \\"forgetti/runtime\\";
const _Memo = _$$memo(_memo);
const Example = function (props) {
  let _c = _$$cache(_useMemo, 6),
    _eq = _$$equals(_c, 0, props),
    _v = _eq ? _c[0] : _c[0] = props,
    _v2 = _eq ? _c[1] : _c[1] = _v.className,
    _eq2 = _$$equals(_c, 2, _v2),
    _v3 = _eq2 ? _c[2] : _c[2] = _v2,
    _v4 = _eq ? _c[3] : _c[3] = _v.children,
    _eq3 = _$$equals(_c, 4, _v4),
    _v5 = _eq3 ? _c[4] : _c[4] = _v4;
  return _eq2 && _eq3 ? _c[5] : _c[5] = <_Memo value={<h1 className={_v3}>{_v5}</h1>} />;
};"
`;

exports[`forgetti skip > should optimize non-skipped variable declaration 1`] = `
"import { useMemo as _useMemo } from \\"react\\";
import { $$cache as _$$cache } from \\"forgetti/runtime\\";
import { memo as _memo } from \\"react\\";
import { $$memo as _$$memo } from \\"forgetti/runtime\\";
import { $$equals as _$$equals } from \\"forgetti/runtime\\";
const _Memo = _$$memo(_memo);
const Example = props => {
  let _c = _$$cache(_useMemo, 6),
    _eq = _$$equals(_c, 0, props),
    _v = _eq ? _c[0] : _c[0] = props,
    _v2 = _eq ? _c[1] : _c[1] = _v.className,
    _eq2 = _$$equals(_c, 2, _v2),
    _v3 = _eq2 ? _c[2] : _c[2] = _v2,
    _v4 = _eq ? _c[3] : _c[3] = _v.children,
    _eq3 = _$$equals(_c, 4, _v4),
    _v5 = _eq3 ? _c[4] : _c[4] = _v4;
  return _eq2 && _eq3 ? _c[5] : _c[5] = <_Memo value={<h1 className={_v3}>{_v5}</h1>} />;
};"
`;

exports[`forgetti skip > should skip skipped function declaration 1`] = `
"/* @forgetti skip */
function Example(props) {
  return <h1 className={props.className}>{props.children}</h1>;
}"
`;

exports[`forgetti skip > should skip skipped function expression 1`] = `
"const /* @forgetti skip */ExampleA = function (props) {
  return <h1 className={props.className}>{props.children}</h1>;
};
/* @forgetti skip */
const ExampleB = function (props) {
  return <h1 className={props.className}>{props.children}</h1>;
};"
`;

exports[`forgetti skip > should skip skipped variable declaration 1`] = `
"const /* @forgetti skip */ExampleA = props => {
  return <h1 className={props.className}>{props.children}</h1>;
};
/* @forgetti skip */
const ExampleB = props => {
  return <h1 className={props.className}>{props.children}</h1>;
};"
`;
